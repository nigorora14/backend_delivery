descargar android
https://developer.android.com/studio/archive?hl=es-419

SDK flutter
https://docs.flutter.dev/development/tools/sdk/releases?tab=macos
2.2.3 f4abaa0 1/7/2021

version
Android Studio 4.2.2 del 30 de junio 2021
***************************************************************************

ENCONTRAR NOMBRE DEL PROYECTO EN:
/frontend_delivery/android/app/src/main/AndroidManifest.xml

FIREBASE
codigo del SHA1
si estas en windows  
abrir git cmd escribir 
cd C:\program files\Android\Android Studio\jre\bin
keytool -list -v -alias androiddebugkey -keystore %USERPROFILE%\.android\debug.keystore
clave vacio dar enter o escribir android

para Mac
se obtiene ejecutando en la terminal de androidStudio ubicandose en la carpeta de android 
escribir en la terminal gradlew signingReport correrlo con cmd + enter

Alias: AndroidDebugKey
MD5: 9C:12:15:31:7E:03:0F:BC:68:C8:87:A2:57:DD:47:98
SHA1: A4:D2:A7:77:E7:2F:44:DC:50:B4:4B:71:AB:75:13:A2:1A:F5:C0:E3
SHA-256: 0E:FF:EC:A8:DF:43:80:3F:75:D4:F0:CD:4D:F0:42:2F:75:4B:BE:8D:19:E9:32:F9:F8:61:79:9C:27:A0:F2:21
luego tendremos el certificado SHA1 y lo pegamos en firebase

entrar con cuenta de google a firebase
descargar el archivo google-services.json si no esta con ese nombre al momento de descargarlo cambiar de nombre
/*tener en cuenta esta url para produccion*/
https://es.stackoverflow.com/questions/153203/c%C3%B3mo-obtener-sha-1-para-producci%C3%B3n-para-usar-en-firebase

pegarlo dentro del frontEnd en /frontend_delivery/android/app dentro de la carpeta app

agregar el sdk de firebase
copiar la dependencia de la web de firebase
y agregarlo en /frontend_delivery/android/gradle en el archivo build.gradle

ir al archivo build.gradle ruta: /frontend_delivery/android/app y buscar el archivo y actualizar en minSdkVersion a 21 
ademas de agregar el plugin cerca a la linea 24 al 27

por ultimo vamos al terminal y ejecutamos flutter clean siempre ubicarse en la ruta del proyecto
verificar la regla del storage de firebase que solo este allow read, write;

Clave API Facturada - Google Consola
AIzaSyBeT4ZvVXN6-ME_yU4I3fNDwG1_N7thEsk

nuevo api google usar la cuenta de nilton.gonzano@gmail.com | 14@qweszxC
clave de api: AIzaSyDp39HC2q6iyTtGuD4hD_FXMYbAeSHh8OI

esto se ingresa para android en AndroidManifest
<meta-data android:name="com.google.android.geo.API_KEY"
           android:value="AIzaSyDp39HC2q6iyTtGuD4hD_FXMYbAeSHh8OI"/>

para ios en AppDelegate
agregar el import

import GoogleMaps

GMSServices.provideAPIKey("AIzaSyDp39HC2q6iyTtGuD4hD_FXMYbAeSHh8OI")

para que haga los trazos en el mapa esto se hace siempre y cuando no funcione la primera api creada
API: AIzaSyAGrb-T3Yqn9-UFpjrFx3dQ4eASEWp2mV8

entrar con cuenta de google a firebase
descargar el archivo google-services.json

*******PARA QUE CORRA EN IOS*************
Entrar a la ruta https://developer.apple.com/download/all/
Descargar “Command Line Tools” segun la version de tu Xcode
Abrir terminal

Modificar con “vim ~/.bash_profile” agregar 

export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

cerrar el archivo

ubicarse en la carpeta de IOS del proyecto y ejecutar en la terminal
pod install
Ejecutar flutter build iOS en el proyecto raíz principal a través de la terminal.
probar si no funciona continuar de ser necesario cambiar la version
Vaya a Macintosh HD -> Usuario -> (Su usuario).

Buscar .zshrc

Ábralo con cualquier editor (recomiendo el código VS) | abrirlo con "vim .zshrc"

agregar 
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

cerrar el archivo con esc + :wq!


Abra su proyecto flutter y elimine manualmente la carpeta Pods, Podfile, Podfile.lock. (copia de seguridad de todos los podfiles)

Reinicie su Mac y ejecute su aplicación flutter(correr el proyecto ios) ubicarse en la ruta del proyecto ejecutar flutter build ios

Correr pod install | esto se hara de manera automatica verificarlo en la carpeta de ios

Creará automáticamente podfile y su nueva configuración en codificación UTF - 8

Disfruta y relájate. ¡Te cubro las espaldas!
********************************************************************
para usar storage en firebase
buscar el archivo cloud_storage.js y agregar y /o actualizar donde esta contenido la url "gs://laser-halia.appspot.com/"


********************************************************************
levantar el backend con nose server.js
si no levanta el backend ejecutar node install
luego ejecutar node server.js

